def fibonacci_generator(limit=None):
    """
    A Fibonacci generator with low memory usage
    """
    n1, n2 = 0, 1
    yield n1
    yield n2
    while True:
        n1, n2 = n2, n1+n2
        if limit and n2 > limit:
            return
        yield n2


def even_fibonacci(limit=None):
    """
    https://projecteuler.net/problem=2
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be:
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms.
    """
    def is_even(n):
        return n % 2 == 0

    if limit is None:
        limit = 4 * 10**6
    return sum(filter(is_even, fibonacci_generator(limit)))


if __name__ == '__main__':
    print(even_fibonacci())
